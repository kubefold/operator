---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: proteinconformationpredictions.data.kubefold.io
spec:
  group: data.kubefold.io
  names:
    kind: ProteinConformationPrediction
    listKind: ProteinConformationPredictionList
    plural: proteinconformationpredictions
    singular: proteinconformationprediction
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.sequencePrefix
      name: Sequence
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              database:
                type: string
              destination:
                properties:
                  s3:
                    type: string
                required:
                - s3
                type: object
              job:
                properties:
                  predictionNodeSelector:
                    description: |-
                      A node selector represents the union of the results of one or more label queries
                      over a set of nodes; that is, it represents the OR of the selectors represented
                      by the node selector terms.
                    properties:
                      nodeSelectorTerms:
                        description: Required. A list of node selector terms. The
                          terms are ORed.
                        items:
                          description: |-
                            A null or empty node selector term matches no objects. The requirements of
                            them are ANDed.
                            The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                          properties:
                            matchExpressions:
                              description: A list of node selector requirements by
                                node's labels.
                              items:
                                description: |-
                                  A node selector requirement is a selector that contains values, a key, and an operator
                                  that relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: |-
                                      Represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: |-
                                      An array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator is Gt or Lt, the values
                                      array must have a single element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchFields:
                              description: A list of node selector requirements by
                                node's fields.
                              items:
                                description: |-
                                  A node selector requirement is a selector that contains values, a key, and an operator
                                  that relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: |-
                                      Represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: |-
                                      An array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator is Gt or Lt, the values
                                      array must have a single element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                        x-kubernetes-list-type: atomic
                    required:
                    - nodeSelectorTerms
                    type: object
                    x-kubernetes-map-type: atomic
                  searchNodeSelector:
                    description: |-
                      A node selector represents the union of the results of one or more label queries
                      over a set of nodes; that is, it represents the OR of the selectors represented
                      by the node selector terms.
                    properties:
                      nodeSelectorTerms:
                        description: Required. A list of node selector terms. The
                          terms are ORed.
                        items:
                          description: |-
                            A null or empty node selector term matches no objects. The requirements of
                            them are ANDed.
                            The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                          properties:
                            matchExpressions:
                              description: A list of node selector requirements by
                                node's labels.
                              items:
                                description: |-
                                  A node selector requirement is a selector that contains values, a key, and an operator
                                  that relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: |-
                                      Represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: |-
                                      An array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator is Gt or Lt, the values
                                      array must have a single element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchFields:
                              description: A list of node selector requirements by
                                node's fields.
                              items:
                                description: |-
                                  A node selector requirement is a selector that contains values, a key, and an operator
                                  that relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: |-
                                      Represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: |-
                                      An array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator is Gt or Lt, the values
                                      array must have a single element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                        x-kubernetes-list-type: atomic
                    required:
                    - nodeSelectorTerms
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              model:
                properties:
                  seeds:
                    items:
                      type: integer
                    type: array
                    x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                type: object
              notify:
                properties:
                  sms:
                    items:
                      type: string
                    type: array
                type: object
              protein:
                properties:
                  id:
                    items:
                      type: string
                    type: array
                    x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                  sequence:
                    type: string
                    x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                required:
                - id
                - sequence
                type: object
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
            required:
            - database
            - destination
            - protein
            type: object
          status:
            properties:
              phase:
                type: string
              sequencePrefix:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
